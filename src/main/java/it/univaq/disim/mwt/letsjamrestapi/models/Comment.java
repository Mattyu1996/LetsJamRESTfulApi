/*
 * LetsJamApi
 * RESTful Api for LetsJam Website. MWT 2020/2021 - Jacopo Cicoria, Antonio Angelini, Mattia Lenza
 *
 * OpenAPI spec version: 1.0
 * Contact: mattia.lenza@student.univaq.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.univaq.disim.mwt.letsjamrestapi.models;

import javax.annotation.Generated;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Comment
 */
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2022-01-07T15:13:39.019Z[GMT]")
public class Comment   {
  @JsonProperty("id")
  private BigDecimal id = null;

  @JsonProperty("user")
  private User user = null;

  @JsonProperty("parentId")
  private BigDecimal parentId = null;

  @JsonProperty("musicSheetId")
  private BigDecimal musicSheetId = null;

  @JsonProperty("content")
  private String content = null;

  @JsonProperty("replies")
  private BigDecimal replies = null;

  public Comment id(BigDecimal id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * minimum: 1
   * @return id
   **/
  @JsonProperty("id")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
 @DecimalMin("1")  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }

  public Comment user(User user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   **/
  @JsonProperty("user")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public Comment parentId(BigDecimal parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
   **/
  @JsonProperty("parentId")
  @Schema(description = "")
  @Valid
  public BigDecimal getParentId() {
    return parentId;
  }

  public void setParentId(BigDecimal parentId) {
    this.parentId = parentId;
  }

  public Comment musicSheetId(BigDecimal musicSheetId) {
    this.musicSheetId = musicSheetId;
    return this;
  }

  /**
   * Get musicSheetId
   * minimum: 1
   * @return musicSheetId
   **/
  @JsonProperty("musicSheetId")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
 @DecimalMin("1")  public BigDecimal getMusicSheetId() {
    return musicSheetId;
  }

  public void setMusicSheetId(BigDecimal musicSheetId) {
    this.musicSheetId = musicSheetId;
  }

  public Comment content(String content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   * @return content
   **/
  @JsonProperty("content")
  @Schema(required = true, description = "")
  @NotNull
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public Comment replies(BigDecimal replies) {
    this.replies = replies;
    return this;
  }

  /**
   * Get replies
   * minimum: 0
   * @return replies
   **/
  @JsonProperty("replies")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
 @DecimalMin("0")  public BigDecimal getReplies() {
    return replies;
  }

  public void setReplies(BigDecimal replies) {
    this.replies = replies;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comment comment = (Comment) o;
    return Objects.equals(this.id, comment.id) &&
        Objects.equals(this.user, comment.user) &&
        Objects.equals(this.parentId, comment.parentId) &&
        Objects.equals(this.musicSheetId, comment.musicSheetId) &&
        Objects.equals(this.content, comment.content) &&
        Objects.equals(this.replies, comment.replies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, user, parentId, musicSheetId, content, replies);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    musicSheetId: ").append(toIndentedString(musicSheetId)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    replies: ").append(toIndentedString(replies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
