/*
 * LetsJamApi
 * RESTful Api for LetsJam Website. MWT 2020/2021 - Jacopo Cicoria, Antonio Angelini, Mattia Lenza
 *
 * OpenAPI spec version: 1.0
 * Contact: mattia.lenza@student.univaq.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.univaq.disim.mwt.letsjamrestapi.models;

import javax.annotation.Generated;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.Map;
import javax.validation.constraints.*;


/**
 * MusicSheetData
 */
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2022-01-07T15:13:39.019Z[GMT]")
public class MusicSheetData   {
  @JsonProperty("content")
  private String content = null;

  @JsonProperty("instrumentMapping")
  private Map<String, String> instrumentMapping = new HashMap<String, String>();

  public MusicSheetData content(String content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   * @return content
   **/
  @JsonProperty("content")
  @Schema(required = true, description = "")
  @NotNull
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public MusicSheetData instrumentMapping(Map<String, String> instrumentMapping) {
    this.instrumentMapping = instrumentMapping;
    return this;
  }

  public MusicSheetData putInstrumentMappingItem(String key, String instrumentMappingItem) {
    this.instrumentMapping.put(key, instrumentMappingItem);
    return this;
  }

  /**
   * Get instrumentMapping
   * @return instrumentMapping
   **/
  @JsonProperty("instrumentMapping")
  @Schema(required = true, description = "")
  @NotNull
  public Map<String, String> getInstrumentMapping() {
    return instrumentMapping;
  }

  public void setInstrumentMapping(Map<String, String> instrumentMapping) {
    this.instrumentMapping = instrumentMapping;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MusicSheetData musicSheetData = (MusicSheetData) o;
    return Objects.equals(this.content, musicSheetData.content) &&
        Objects.equals(this.instrumentMapping, musicSheetData.instrumentMapping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, instrumentMapping);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MusicSheetData {\n");
    
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    instrumentMapping: ").append(toIndentedString(instrumentMapping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
