/*
 * LetsJamApi
 * RESTful Api for LetsJam Website. MWT 2020/2021 - Jacopo Cicoria, Antonio Angelini, Mattia Lenza
 *
 * OpenAPI spec version: 1.0
 * Contact: mattia.lenza@student.univaq.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.univaq.disim.mwt.letsjamrestapi.models;

import javax.annotation.Generated;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * MusicSheet
 */
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2022-01-07T15:13:39.019Z[GMT]")
public class MusicSheet   {
  @JsonProperty("id")
  private BigDecimal id = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("author")
  private String author = null;

  @JsonProperty("verified")
  private Boolean verified = null;

  @JsonProperty("visibility")
  private Boolean visibility = null;

  @JsonProperty("rearranged")
  private Boolean rearranged = null;

  @JsonProperty("hasTablature")
  private Boolean hasTablature = null;

  @JsonProperty("song")
  private Song song = null;

  @JsonProperty("user")
  private User user = null;

  @JsonProperty("likes")
  private BigDecimal likes = null;

  @JsonProperty("instruments")
  private List<Instrument> instruments = new ArrayList<Instrument>();

  @JsonProperty("createDateTime")
  private Date createDateTime = null;

  @JsonProperty("updateDateTime")
  private Date updateDateTime = null;

  public MusicSheet id(BigDecimal id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * minimum: 1
   * @return id
   **/
  @JsonProperty("id")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
 @DecimalMin("1")  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }

  public MusicSheet title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   **/
  @JsonProperty("title")
  @Schema(required = true, description = "")
  @NotNull
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public MusicSheet author(String author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   * @return author
   **/
  @JsonProperty("author")
  @Schema(required = true, description = "")
  @NotNull
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public MusicSheet verified(Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * Get verified
   * @return verified
   **/
  @JsonProperty("verified")
  @Schema(required = true, description = "")
  @NotNull
  public Boolean isVerified() {
    return verified;
  }

  public void setVerified(Boolean verified) {
    this.verified = verified;
  }

  public MusicSheet visibility(Boolean visibility) {
    this.visibility = visibility;
    return this;
  }

  /**
   * Get visibility
   * @return visibility
   **/
  @JsonProperty("visibility")
  @Schema(required = true, description = "")
  @NotNull
  public Boolean isVisibility() {
    return visibility;
  }

  public void setVisibility(Boolean visibility) {
    this.visibility = visibility;
  }

  public MusicSheet rearranged(Boolean rearranged) {
    this.rearranged = rearranged;
    return this;
  }

  /**
   * Get rearranged
   * @return rearranged
   **/
  @JsonProperty("rearranged")
  @Schema(required = true, description = "")
  @NotNull
  public Boolean isRearranged() {
    return rearranged;
  }

  public void setRearranged(Boolean rearranged) {
    this.rearranged = rearranged;
  }

  public MusicSheet hasTablature(Boolean hasTablature) {
    this.hasTablature = hasTablature;
    return this;
  }

  /**
   * Get hasTablature
   * @return hasTablature
   **/
  @JsonProperty("hasTablature")
  @Schema(required = true, description = "")
  @NotNull
  public Boolean isHasTablature() {
    return hasTablature;
  }

  public void setHasTablature(Boolean hasTablature) {
    this.hasTablature = hasTablature;
  }

  public MusicSheet song(Song song) {
    this.song = song;
    return this;
  }

  /**
   * Get song
   * @return song
   **/
  @JsonProperty("song")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public Song getSong() {
    return song;
  }

  public void setSong(Song song) {
    this.song = song;
  }

    /**
   * Get user
   * @return user
   **/
  @JsonProperty("user")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public MusicSheet likes(BigDecimal likes) {
    this.likes = likes;
    return this;
  }

  /**
   * Get likes
   * minimum: 0
   * @return likes
   **/
  @JsonProperty("likes")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
 @DecimalMin("0")  public BigDecimal getLikes() {
    return likes;
  }

  public void setLikes(BigDecimal likes) {
    this.likes = likes;
  }

  public MusicSheet instruments(List<Instrument> instruments) {
    this.instruments = instruments;
    return this;
  }

  public MusicSheet addInstrumentsItem(Instrument instrumentsItem) {
    this.instruments.add(instrumentsItem);
    return this;
  }

  /**
   * Get instruments
   * @return instruments
   **/
  @JsonProperty("instruments")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public List<Instrument> getInstruments() {
    return instruments;
  }

  public void setInstruments(List<Instrument> instruments) {
    this.instruments = instruments;
  }

  public MusicSheet createDateTime(Date createDateTime) {
    this.createDateTime = createDateTime;
    return this;
  }

  /**
   * Get createDateTime
   * @return createDateTime
   **/
  @JsonProperty("createDateTime")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public Date getCreateDateTime() {
    return createDateTime;
  }

  public void setCreateDateTime(Date createDateTime) {
    this.createDateTime = createDateTime;
  }

  public MusicSheet updateDateTime(Date updateDateTime) {
    this.updateDateTime = updateDateTime;
    return this;
  }

  /**
   * Get updateDateTime
   * @return updateDateTime
   **/
  @JsonProperty("updateDateTime")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public Date getUpdateDateTime() {
    return updateDateTime;
  }

  public void setUpdateDateTime(Date updateDateTime) {
    this.updateDateTime = updateDateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MusicSheet musicSheet = (MusicSheet) o;
    return Objects.equals(this.id, musicSheet.id) &&
        Objects.equals(this.title, musicSheet.title) &&
        Objects.equals(this.author, musicSheet.author) &&
        Objects.equals(this.verified, musicSheet.verified) &&
        Objects.equals(this.visibility, musicSheet.visibility) &&
        Objects.equals(this.rearranged, musicSheet.rearranged) &&
        Objects.equals(this.hasTablature, musicSheet.hasTablature) &&
        Objects.equals(this.song, musicSheet.song) &&
        Objects.equals(this.likes, musicSheet.likes) &&
        Objects.equals(this.instruments, musicSheet.instruments) &&
        Objects.equals(this.createDateTime, musicSheet.createDateTime) &&
        Objects.equals(this.updateDateTime, musicSheet.updateDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, author, verified, visibility, rearranged, hasTablature, song, likes, instruments, createDateTime, updateDateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MusicSheet {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    rearranged: ").append(toIndentedString(rearranged)).append("\n");
    sb.append("    hasTablature: ").append(toIndentedString(hasTablature)).append("\n");
    sb.append("    song: ").append(toIndentedString(song)).append("\n");
    sb.append("    likes: ").append(toIndentedString(likes)).append("\n");
    sb.append("    instruments: ").append(toIndentedString(instruments)).append("\n");
    sb.append("    createDateTime: ").append(toIndentedString(createDateTime)).append("\n");
    sb.append("    updateDateTime: ").append(toIndentedString(updateDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public enum SortEnum {
    TITLE("spartiti.title"),
    SONGTITLE("brani.title"),
    CREATEDATETIME("spartiti.create_date_time"),
    LIKES("likes");

    private String value;

    SortEnum(String value) {
      this.value = value;
    }

    public String toString() {
      return String.valueOf(value);
    }

    public static SortEnum fromValue(String text) {
      for (SortEnum b : SortEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }
}
